// source: donaciones.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.donaciones.ItemDonacion', null, global);
goog.exportSymbol('proto.donaciones.ListaOfertasResponse', null, global);
goog.exportSymbol('proto.donaciones.ListaSolicitudesResponse', null, global);
goog.exportSymbol('proto.donaciones.OfertaDonacionRequest', null, global);
goog.exportSymbol('proto.donaciones.Respuesta', null, global);
goog.exportSymbol('proto.donaciones.SolicitudDonacionRequest', null, global);
goog.exportSymbol('proto.donaciones.TransferenciaDonacionRequest', null, global);
goog.exportSymbol('proto.donaciones.Vacio', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.donaciones.Vacio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.donaciones.Vacio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.donaciones.Vacio.displayName = 'proto.donaciones.Vacio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.donaciones.Respuesta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.donaciones.Respuesta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.donaciones.Respuesta.displayName = 'proto.donaciones.Respuesta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.donaciones.ItemDonacion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.donaciones.ItemDonacion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.donaciones.ItemDonacion.displayName = 'proto.donaciones.ItemDonacion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.donaciones.SolicitudDonacionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.donaciones.SolicitudDonacionRequest.repeatedFields_, null);
};
goog.inherits(proto.donaciones.SolicitudDonacionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.donaciones.SolicitudDonacionRequest.displayName = 'proto.donaciones.SolicitudDonacionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.donaciones.ListaSolicitudesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.donaciones.ListaSolicitudesResponse.repeatedFields_, null);
};
goog.inherits(proto.donaciones.ListaSolicitudesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.donaciones.ListaSolicitudesResponse.displayName = 'proto.donaciones.ListaSolicitudesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.donaciones.OfertaDonacionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.donaciones.OfertaDonacionRequest.repeatedFields_, null);
};
goog.inherits(proto.donaciones.OfertaDonacionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.donaciones.OfertaDonacionRequest.displayName = 'proto.donaciones.OfertaDonacionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.donaciones.ListaOfertasResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.donaciones.ListaOfertasResponse.repeatedFields_, null);
};
goog.inherits(proto.donaciones.ListaOfertasResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.donaciones.ListaOfertasResponse.displayName = 'proto.donaciones.ListaOfertasResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.donaciones.TransferenciaDonacionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.donaciones.TransferenciaDonacionRequest.repeatedFields_, null);
};
goog.inherits(proto.donaciones.TransferenciaDonacionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.donaciones.TransferenciaDonacionRequest.displayName = 'proto.donaciones.TransferenciaDonacionRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.donaciones.Vacio.prototype.toObject = function(opt_includeInstance) {
  return proto.donaciones.Vacio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.donaciones.Vacio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.Vacio.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.donaciones.Vacio}
 */
proto.donaciones.Vacio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.donaciones.Vacio;
  return proto.donaciones.Vacio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.donaciones.Vacio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.donaciones.Vacio}
 */
proto.donaciones.Vacio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.donaciones.Vacio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.donaciones.Vacio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.donaciones.Vacio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.Vacio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.donaciones.Respuesta.prototype.toObject = function(opt_includeInstance) {
  return proto.donaciones.Respuesta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.donaciones.Respuesta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.Respuesta.toObject = function(includeInstance, msg) {
  var f, obj = {
mensaje: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.donaciones.Respuesta}
 */
proto.donaciones.Respuesta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.donaciones.Respuesta;
  return proto.donaciones.Respuesta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.donaciones.Respuesta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.donaciones.Respuesta}
 */
proto.donaciones.Respuesta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMensaje(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.donaciones.Respuesta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.donaciones.Respuesta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.donaciones.Respuesta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.Respuesta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMensaje();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string mensaje = 1;
 * @return {string}
 */
proto.donaciones.Respuesta.prototype.getMensaje = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.Respuesta} returns this
 */
proto.donaciones.Respuesta.prototype.setMensaje = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.donaciones.ItemDonacion.prototype.toObject = function(opt_includeInstance) {
  return proto.donaciones.ItemDonacion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.donaciones.ItemDonacion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.ItemDonacion.toObject = function(includeInstance, msg) {
  var f, obj = {
categoria: jspb.Message.getFieldWithDefault(msg, 1, ""),
descripcion: jspb.Message.getFieldWithDefault(msg, 2, ""),
cantidad: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.donaciones.ItemDonacion}
 */
proto.donaciones.ItemDonacion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.donaciones.ItemDonacion;
  return proto.donaciones.ItemDonacion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.donaciones.ItemDonacion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.donaciones.ItemDonacion}
 */
proto.donaciones.ItemDonacion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoria(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescripcion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCantidad(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.donaciones.ItemDonacion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.donaciones.ItemDonacion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.donaciones.ItemDonacion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.ItemDonacion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoria();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescripcion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCantidad();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string categoria = 1;
 * @return {string}
 */
proto.donaciones.ItemDonacion.prototype.getCategoria = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.ItemDonacion} returns this
 */
proto.donaciones.ItemDonacion.prototype.setCategoria = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string descripcion = 2;
 * @return {string}
 */
proto.donaciones.ItemDonacion.prototype.getDescripcion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.ItemDonacion} returns this
 */
proto.donaciones.ItemDonacion.prototype.setDescripcion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 cantidad = 3;
 * @return {number}
 */
proto.donaciones.ItemDonacion.prototype.getCantidad = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.donaciones.ItemDonacion} returns this
 */
proto.donaciones.ItemDonacion.prototype.setCantidad = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.donaciones.SolicitudDonacionRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.donaciones.SolicitudDonacionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.donaciones.SolicitudDonacionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.donaciones.SolicitudDonacionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.SolicitudDonacionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
idorganizacion: jspb.Message.getFieldWithDefault(msg, 1, ""),
idsolicitud: jspb.Message.getFieldWithDefault(msg, 2, ""),
donacionesList: jspb.Message.toObjectList(msg.getDonacionesList(),
    proto.donaciones.ItemDonacion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.donaciones.SolicitudDonacionRequest}
 */
proto.donaciones.SolicitudDonacionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.donaciones.SolicitudDonacionRequest;
  return proto.donaciones.SolicitudDonacionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.donaciones.SolicitudDonacionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.donaciones.SolicitudDonacionRequest}
 */
proto.donaciones.SolicitudDonacionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdorganizacion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdsolicitud(value);
      break;
    case 3:
      var value = new proto.donaciones.ItemDonacion;
      reader.readMessage(value,proto.donaciones.ItemDonacion.deserializeBinaryFromReader);
      msg.addDonaciones(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.donaciones.SolicitudDonacionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.donaciones.SolicitudDonacionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.donaciones.SolicitudDonacionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.SolicitudDonacionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdorganizacion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdsolicitud();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDonacionesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.donaciones.ItemDonacion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string idOrganizacion = 1;
 * @return {string}
 */
proto.donaciones.SolicitudDonacionRequest.prototype.getIdorganizacion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.SolicitudDonacionRequest} returns this
 */
proto.donaciones.SolicitudDonacionRequest.prototype.setIdorganizacion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string idSolicitud = 2;
 * @return {string}
 */
proto.donaciones.SolicitudDonacionRequest.prototype.getIdsolicitud = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.SolicitudDonacionRequest} returns this
 */
proto.donaciones.SolicitudDonacionRequest.prototype.setIdsolicitud = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ItemDonacion donaciones = 3;
 * @return {!Array<!proto.donaciones.ItemDonacion>}
 */
proto.donaciones.SolicitudDonacionRequest.prototype.getDonacionesList = function() {
  return /** @type{!Array<!proto.donaciones.ItemDonacion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.donaciones.ItemDonacion, 3));
};


/**
 * @param {!Array<!proto.donaciones.ItemDonacion>} value
 * @return {!proto.donaciones.SolicitudDonacionRequest} returns this
*/
proto.donaciones.SolicitudDonacionRequest.prototype.setDonacionesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.donaciones.ItemDonacion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.donaciones.ItemDonacion}
 */
proto.donaciones.SolicitudDonacionRequest.prototype.addDonaciones = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.donaciones.ItemDonacion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.donaciones.SolicitudDonacionRequest} returns this
 */
proto.donaciones.SolicitudDonacionRequest.prototype.clearDonacionesList = function() {
  return this.setDonacionesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.donaciones.ListaSolicitudesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.donaciones.ListaSolicitudesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.donaciones.ListaSolicitudesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.donaciones.ListaSolicitudesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.ListaSolicitudesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
solicitudesList: jspb.Message.toObjectList(msg.getSolicitudesList(),
    proto.donaciones.SolicitudDonacionRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.donaciones.ListaSolicitudesResponse}
 */
proto.donaciones.ListaSolicitudesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.donaciones.ListaSolicitudesResponse;
  return proto.donaciones.ListaSolicitudesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.donaciones.ListaSolicitudesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.donaciones.ListaSolicitudesResponse}
 */
proto.donaciones.ListaSolicitudesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.donaciones.SolicitudDonacionRequest;
      reader.readMessage(value,proto.donaciones.SolicitudDonacionRequest.deserializeBinaryFromReader);
      msg.addSolicitudes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.donaciones.ListaSolicitudesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.donaciones.ListaSolicitudesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.donaciones.ListaSolicitudesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.ListaSolicitudesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSolicitudesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.donaciones.SolicitudDonacionRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SolicitudDonacionRequest solicitudes = 1;
 * @return {!Array<!proto.donaciones.SolicitudDonacionRequest>}
 */
proto.donaciones.ListaSolicitudesResponse.prototype.getSolicitudesList = function() {
  return /** @type{!Array<!proto.donaciones.SolicitudDonacionRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.donaciones.SolicitudDonacionRequest, 1));
};


/**
 * @param {!Array<!proto.donaciones.SolicitudDonacionRequest>} value
 * @return {!proto.donaciones.ListaSolicitudesResponse} returns this
*/
proto.donaciones.ListaSolicitudesResponse.prototype.setSolicitudesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.donaciones.SolicitudDonacionRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.donaciones.SolicitudDonacionRequest}
 */
proto.donaciones.ListaSolicitudesResponse.prototype.addSolicitudes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.donaciones.SolicitudDonacionRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.donaciones.ListaSolicitudesResponse} returns this
 */
proto.donaciones.ListaSolicitudesResponse.prototype.clearSolicitudesList = function() {
  return this.setSolicitudesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.donaciones.OfertaDonacionRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.donaciones.OfertaDonacionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.donaciones.OfertaDonacionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.donaciones.OfertaDonacionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.OfertaDonacionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
idoferta: jspb.Message.getFieldWithDefault(msg, 1, ""),
idorganizaciondonante: jspb.Message.getFieldWithDefault(msg, 2, ""),
donacionesList: jspb.Message.toObjectList(msg.getDonacionesList(),
    proto.donaciones.ItemDonacion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.donaciones.OfertaDonacionRequest}
 */
proto.donaciones.OfertaDonacionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.donaciones.OfertaDonacionRequest;
  return proto.donaciones.OfertaDonacionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.donaciones.OfertaDonacionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.donaciones.OfertaDonacionRequest}
 */
proto.donaciones.OfertaDonacionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdoferta(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdorganizaciondonante(value);
      break;
    case 3:
      var value = new proto.donaciones.ItemDonacion;
      reader.readMessage(value,proto.donaciones.ItemDonacion.deserializeBinaryFromReader);
      msg.addDonaciones(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.donaciones.OfertaDonacionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.donaciones.OfertaDonacionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.donaciones.OfertaDonacionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.OfertaDonacionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdoferta();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdorganizaciondonante();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDonacionesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.donaciones.ItemDonacion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string idOferta = 1;
 * @return {string}
 */
proto.donaciones.OfertaDonacionRequest.prototype.getIdoferta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.OfertaDonacionRequest} returns this
 */
proto.donaciones.OfertaDonacionRequest.prototype.setIdoferta = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string idOrganizacionDonante = 2;
 * @return {string}
 */
proto.donaciones.OfertaDonacionRequest.prototype.getIdorganizaciondonante = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.OfertaDonacionRequest} returns this
 */
proto.donaciones.OfertaDonacionRequest.prototype.setIdorganizaciondonante = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ItemDonacion donaciones = 3;
 * @return {!Array<!proto.donaciones.ItemDonacion>}
 */
proto.donaciones.OfertaDonacionRequest.prototype.getDonacionesList = function() {
  return /** @type{!Array<!proto.donaciones.ItemDonacion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.donaciones.ItemDonacion, 3));
};


/**
 * @param {!Array<!proto.donaciones.ItemDonacion>} value
 * @return {!proto.donaciones.OfertaDonacionRequest} returns this
*/
proto.donaciones.OfertaDonacionRequest.prototype.setDonacionesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.donaciones.ItemDonacion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.donaciones.ItemDonacion}
 */
proto.donaciones.OfertaDonacionRequest.prototype.addDonaciones = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.donaciones.ItemDonacion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.donaciones.OfertaDonacionRequest} returns this
 */
proto.donaciones.OfertaDonacionRequest.prototype.clearDonacionesList = function() {
  return this.setDonacionesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.donaciones.ListaOfertasResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.donaciones.ListaOfertasResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.donaciones.ListaOfertasResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.donaciones.ListaOfertasResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.ListaOfertasResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
ofertasList: jspb.Message.toObjectList(msg.getOfertasList(),
    proto.donaciones.OfertaDonacionRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.donaciones.ListaOfertasResponse}
 */
proto.donaciones.ListaOfertasResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.donaciones.ListaOfertasResponse;
  return proto.donaciones.ListaOfertasResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.donaciones.ListaOfertasResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.donaciones.ListaOfertasResponse}
 */
proto.donaciones.ListaOfertasResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.donaciones.OfertaDonacionRequest;
      reader.readMessage(value,proto.donaciones.OfertaDonacionRequest.deserializeBinaryFromReader);
      msg.addOfertas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.donaciones.ListaOfertasResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.donaciones.ListaOfertasResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.donaciones.ListaOfertasResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.ListaOfertasResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfertasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.donaciones.OfertaDonacionRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OfertaDonacionRequest ofertas = 1;
 * @return {!Array<!proto.donaciones.OfertaDonacionRequest>}
 */
proto.donaciones.ListaOfertasResponse.prototype.getOfertasList = function() {
  return /** @type{!Array<!proto.donaciones.OfertaDonacionRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.donaciones.OfertaDonacionRequest, 1));
};


/**
 * @param {!Array<!proto.donaciones.OfertaDonacionRequest>} value
 * @return {!proto.donaciones.ListaOfertasResponse} returns this
*/
proto.donaciones.ListaOfertasResponse.prototype.setOfertasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.donaciones.OfertaDonacionRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.donaciones.OfertaDonacionRequest}
 */
proto.donaciones.ListaOfertasResponse.prototype.addOfertas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.donaciones.OfertaDonacionRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.donaciones.ListaOfertasResponse} returns this
 */
proto.donaciones.ListaOfertasResponse.prototype.clearOfertasList = function() {
  return this.setOfertasList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.donaciones.TransferenciaDonacionRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.donaciones.TransferenciaDonacionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.donaciones.TransferenciaDonacionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.TransferenciaDonacionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
idsolicitud: jspb.Message.getFieldWithDefault(msg, 1, ""),
idorganizaciondonante: jspb.Message.getFieldWithDefault(msg, 2, ""),
idorganizacionreceptora: jspb.Message.getFieldWithDefault(msg, 3, ""),
donacionesList: jspb.Message.toObjectList(msg.getDonacionesList(),
    proto.donaciones.ItemDonacion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.donaciones.TransferenciaDonacionRequest}
 */
proto.donaciones.TransferenciaDonacionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.donaciones.TransferenciaDonacionRequest;
  return proto.donaciones.TransferenciaDonacionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.donaciones.TransferenciaDonacionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.donaciones.TransferenciaDonacionRequest}
 */
proto.donaciones.TransferenciaDonacionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdsolicitud(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdorganizaciondonante(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdorganizacionreceptora(value);
      break;
    case 4:
      var value = new proto.donaciones.ItemDonacion;
      reader.readMessage(value,proto.donaciones.ItemDonacion.deserializeBinaryFromReader);
      msg.addDonaciones(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.donaciones.TransferenciaDonacionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.donaciones.TransferenciaDonacionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.donaciones.TransferenciaDonacionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsolicitud();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdorganizaciondonante();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdorganizacionreceptora();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDonacionesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.donaciones.ItemDonacion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string idSolicitud = 1;
 * @return {string}
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.getIdsolicitud = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.TransferenciaDonacionRequest} returns this
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.setIdsolicitud = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string idOrganizacionDonante = 2;
 * @return {string}
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.getIdorganizaciondonante = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.TransferenciaDonacionRequest} returns this
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.setIdorganizaciondonante = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string idOrganizacionReceptora = 3;
 * @return {string}
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.getIdorganizacionreceptora = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.donaciones.TransferenciaDonacionRequest} returns this
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.setIdorganizacionreceptora = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ItemDonacion donaciones = 4;
 * @return {!Array<!proto.donaciones.ItemDonacion>}
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.getDonacionesList = function() {
  return /** @type{!Array<!proto.donaciones.ItemDonacion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.donaciones.ItemDonacion, 4));
};


/**
 * @param {!Array<!proto.donaciones.ItemDonacion>} value
 * @return {!proto.donaciones.TransferenciaDonacionRequest} returns this
*/
proto.donaciones.TransferenciaDonacionRequest.prototype.setDonacionesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.donaciones.ItemDonacion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.donaciones.ItemDonacion}
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.addDonaciones = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.donaciones.ItemDonacion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.donaciones.TransferenciaDonacionRequest} returns this
 */
proto.donaciones.TransferenciaDonacionRequest.prototype.clearDonacionesList = function() {
  return this.setDonacionesList([]);
};


goog.object.extend(exports, proto.donaciones);
